@page "/Keyboard"
@using KristofferStrube.Blazor.WebAudio;
@inject IJSRuntime JSRuntime
<PageTitle>WebAudio - KeyBoard</PageTitle>
<h2>KeyBoard</h2>

<svg @onpointerup="StopSound"
	@onpointerenter="StopSound"
	@onpointerleave="StopSound"
	width="100%"
	height="40vh"
	viewBox="0 0 @(keys.Count(k => k.Color == "white")*100) 600"
	style="user-select:none;touch-action:none;">
	@foreach (var i in whiteKeyIndices)
	{
		var k = i;
		<rect @onpointerdown="(e) => PointerMove(keys[k].Octave, keys[k].Pitch, e)"
			@onpointermove="(e) => PointerMove(keys[k].Octave, keys[k].Pitch, e)"
			x="@(keys.GetRange(0, i).Count(k => k.Color == "white")*100)"
			y="0"
			width="100"
			height="600"
			fill="white"
			stroke="black"
			stroke-width="1"></rect>
		<text>
			<text x="@(keys.GetRange(0, i).Count(k => k.Color == "white")*100+20)"
				y="580"
				width="100"
				height="600"
				fill="white"
				stroke="black"
				stroke-width="4"
				style="font-size:80px;pointer-events:none;">
				@keys[i].Name
			</text>
		</text>
	}
	@foreach (var i in blackKeyIndices)
	{
		var k = i;
		<rect @onpointerdown="(e) => PointerMove(keys[k].Octave, keys[k].Pitch, e)"
		@onpointermove="(e) => PointerMove(keys[k].Octave, keys[k].Pitch, e)"
		x="@(keys.GetRange(0, i).Count(k => k.Color == "white")*100-35)"
		y="0"
		width="70"
		height="400"
		fill="black"
		stroke="black"
		stroke-width="1"></rect>
}
</svg>
<label for="gain">Volume</label>
<input id="gain" type="range" min="0" max="1" step="0.01" style="width:min(200px, 100%);" @bind-value=gain>
